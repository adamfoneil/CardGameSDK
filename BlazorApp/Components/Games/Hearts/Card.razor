@if (PlayingCard is null) return;

<div class="py-4 px-2 border rounded-1 d-flex align-items-center me-2" @onclick="(args) => DoOnClick(args)" style="@(PlayableStyle)">
	<h2 class="my-0 me-1" style="color:@suitImage?.Color">@DisplayRank</h2>
	<div><SuitImage Suit="PlayingCard?.Suit" @ref="suitImage" /></div>
</div>

@code {
	private SuitImage? suitImage;

	[Parameter, EditorRequired]
	public PlayingCard? PlayingCard { get; set; }

	[Parameter]
	public EventCallback<PlayingCard> OnClick { get; set; }

	[Parameter]
	public bool Playable { get; set; } = true;

	private string DisplayRank => PlayingCard?.DisplayRank.ToString().Substring(0, 1) ?? string.Empty;
	private string Display => DisplayRank + PlayingCard?.Suit.Name.Substring(0, 1);
	private string PlayableStyle => Playable ? "cursor:pointer" : "cursor:not-allowed";	


	private async Task DoOnClick(MouseEventArgs args)
	{
		if (!Playable) return;
		await OnClick.InvokeAsync(PlayingCard);
	}
	
}

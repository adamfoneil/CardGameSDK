@using global::Games.Hearts

<div>
	<div>Current Hands:</div>
	@foreach (var p in State.Players)
	{
		<details>
			<summary>@p.Name</summary>
			<Hand Playable="false" Cards="State.PlayersByName[p.Name].Hand" GameState="State" PlayerName="@p.Name" />
		</details>
	}

	<hr class="mt-4" />
	<details>
		<summary>Hearts Remaining (@State.HeartsRemaining.Count)</summary>
		<Hand Playable="false" Cards="State.HeartsRemaining" GameState="State" />
	</details>

	<hr class="mt-4" />
	<div>Tricks:</div>
	@{
		int index = 0;
	}
	@foreach (var trick in State.Tricks)
	{		
		index++;
		
		<details>
			<summary>Trick @index - @trick.Points pts</summary>
			<TrickDetail Trick="trick" />
		</details>
	}
	<div>Total points: @State.Tricks.Sum(t => t.Points)</div>

	<hr class="mt-4" />
	<details>
		<summary>Score (this round) @State.Score.Sum(kp => kp.Value) total pts</summary>
		<ul>
			@foreach (var kp in State.Score)
			{
				<li>@kp.Key: @kp.Value</li>
			}
		</ul>
	</details>		
</div>

@code {
	[Parameter, EditorRequired]
	public HeartsGameState State { get; set; } = default!;
}
